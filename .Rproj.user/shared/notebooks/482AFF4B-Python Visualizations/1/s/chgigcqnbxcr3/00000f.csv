"0","import pandas as pd"
"0","import numpy as np"
"0","from scipy.stats import ttest_ind"
"0","import statsmodels.api as sm"
"0","from statsmodels.formula.api import ols"
"0",""
"0","# Simulate data if not already loaded"
"0","dates = pd.date_range(start='1982-01-01', end='1987-01-01', freq='M')"
"0",""
"0","monthly_sentiment_dataset1 = pd.DataFrame({"
"0","    'Date': dates,"
"0","    'SentimentScore': np.random.uniform(-1, 1, size=len(dates))"
"0","})"
"0",""
"0","monthly_sentiment_dataset3 = pd.DataFrame({"
"0","    'Date': dates,"
"0","    'SentimentScore': np.random.uniform(-1, 1, size=len(dates))"
"0","})"
"0",""
"0","monthly_sentiment_influential = pd.DataFrame({"
"0","    'Date': dates,"
"0","    'SentimentScore': np.random.uniform(-1, 1, size=len(dates))"
"0","})"
"0",""
"0","# Combine sentiment data"
"0","def combine_sentiment_data(sentiment_dfs, group_names):"
"0","    combined_data = pd.concat("
"0","        [df.assign(Group=group_name) for df, group_name in zip(sentiment_dfs, group_names)],"
"0","        ignore_index=True"
"0","    )"
"0","    return combined_data"
"0","    "
"0","# Perform ANOVA"
"0","def perform_anova(combined_data, value_column='SentimentScore', group_column='Group'):"
"0","    model = ols(f""{value_column} ~ C({group_column})"", data=combined_data).fit()"
"0","    anova_results = sm.stats.anova_lm(model, typ=2)"
"0","    return anova_results"
"0","    "
"0","# Perform pairwise t-tests"
"0","def perform_pairwise_ttests(combined_data, value_column='SentimentScore', group_column='Group'):"
"0","    groups = combined_data[group_column].unique()"
"0","    pairwise_results = []"
"0","    for i, g1 in enumerate(groups):"
"0","        for g2 in groups[i+1:]:"
"0","            group1_data = combined_data[combined_data[group_column] == g1][value_column]"
"0","            group2_data = combined_data[combined_data[group_column] == g2][value_column]"
"0","            t_stat, p_value = ttest_ind(group1_data, group2_data, equal_var=False)"
"0","            pairwise_results.append({'Group1': g1, 'Group2': g2, 't-statistic': t_stat, 'p-value': p_value})"
"0","    return pd.DataFrame(pairwise_results)"
"0","    "
"0","# Define groups and combine data"
"0","sentiment_dfs = [monthly_sentiment_dataset1, monthly_sentiment_dataset3, monthly_sentiment_influential]"
"0","group_names = ['Dataset One', 'Dataset Three', 'Influential Authors']"
"0","combined_sentiment_data = combine_sentiment_data(sentiment_dfs, group_names)"
"0",""
"0","# Perform ANOVA and t-tests"
"0","anova_results = perform_anova(combined_sentiment_data)"
"0","pairwise_results = perform_pairwise_ttests(combined_sentiment_data)"
"0",""
"0","# Output results"
"0","print(""\nANOVA Results:"")"
"0","print(anova_results)"
"1","
ANOVA Results:
"
"0","print(""\nPairwise t-test Results:"")"
"1","             sum_sq     df        F    PR(>F)
C(Group)   3.732666    2.0  5.78832  0.003672
Residual  57.070268  177.0      NaN       NaN
"
"1","
Pairwise t-test Results:
"
"0","print(pairwise_results)"
"1","          Group1               Group2  t-statistic   p-value
0    Dataset One        Dataset Three    -2.665929  0.008754
1    Dataset One  Influential Authors    -3.148130  0.002090
2  Dataset Three  Influential Authors    -0.690996  0.490956
"
