"0","library(igraph)"
"0","library(ggraph)"
"0","library(tidygraph)"
"0","library(dplyr)"
"0",""
"0","# Identify influential authors' threads"
"0","influential_threads <- filtered_comments %>%"
"0","  filter(Author %in% top_influential_authors$Author) %>%"
"0","  select(Thread.ID) %>%"
"0","  distinct()"
"0",""
"0","# Create edges based on who commented after influential authors"
"0","edges <- filtered_comments %>%"
"0","  inner_join(influential_threads, by = ""Thread.ID"") %>%"
"0","  arrange(Thread.ID, Date) %>%"
"0","  group_by(Thread.ID) %>%"
"0","  mutate(PreviousAuthor = lag(Author)) %>%"
"0","  ungroup() %>%"
"0","  filter(!is.na(PreviousAuthor), "
"0","         Author != PreviousAuthor,"
"0","         PreviousAuthor %in% top_influential_authors$Author) %>%"
"0","  select(from = PreviousAuthor, to = Author) %>%"
"0","  group_by(from, to) %>%"
"0","  summarise(weight = n(), .groups = ""drop"") %>%"
"0","  # Filter for stronger connections"
"0","  filter(weight > quantile(weight, 0.25))"
"0",""
"0","# Create graph"
"0","graph <- graph_from_data_frame(edges, directed = TRUE)"
"0",""
"0","# Calculate node sizes based on in-degree"
"0","node_sizes <- degree(graph, mode = ""in"")"
"0",""
"0","# Identify top 10 influential nodes"
"0","top_nodes <- names(sort(node_sizes, decreasing = TRUE)[1:10])"
"0",""
"0","# Create layout"
"0","layout <- create_layout(graph, layout = ""fr"")"
"0",""
"0","# Create plot"
"0","influence_plot <- ggraph(layout) + "
"0","  geom_edge_link(aes(width = weight), alpha = 0.2, arrow = arrow(length = unit(2, 'mm')), end_cap = circle(3, 'mm')) +"
"0","  geom_node_point(aes(size = node_sizes, color = name %in% top_influential_authors$Author)) +"
"0","  geom_node_text(aes(label = ifelse(name %in% top_nodes, name, """")), repel = TRUE, size = 3) +"
"0","  scale_edge_width(range = c(0.1, 2)) +"
"0","  scale_size(range = c(1, 10)) +"
"0","  scale_color_manual(values = c(""TRUE"" = ""red"", ""FALSE"" = ""lightblue"")) +"
"0","  theme_minimal() +"
"0","  theme(legend.position = ""none"") "
"0",""
"0","# Print the plot"
"0","print(influence_plot)"
