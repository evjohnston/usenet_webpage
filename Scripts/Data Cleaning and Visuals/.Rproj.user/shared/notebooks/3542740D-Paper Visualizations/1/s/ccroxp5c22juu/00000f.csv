"0","# Load necessary libraries"
"0","library(visNetwork)"
"0","library(igraph)"
"0",""
"0","library(visNetwork)"
"0","library(igraph)"
"0",""
"0","# Create an igraph object from the filtered co-occurrence matrix"
"0","graph_3d <- graph_from_adjacency_matrix(filtered_co_occurrence, weighted = TRUE, mode = ""undirected"", diag = FALSE)"
"0",""
"0","# Simplify the graph to avoid self-loops and redundant edges"
"0","graph_3d <- simplify(graph_3d)"
"0",""
"0","# Prepare colors based on topic assignment"
"0","topic_colors <- RColorBrewer::brewer.pal(6, ""Set1"")[term_topic_df$topic]"
"0",""
"0","# Prepare data for visNetwork"
"0","nodes <- data.frame("
"0","  id = V(graph_3d)$name,"
"0","  label = V(graph_3d)$name,  # Labels are always visible"
"0","  group = term_topic_df$topic,  # Group nodes by topic"
"0","  value = log1p(term_frequency[filtered_terms]) * 8,  # Increase node size scaling for visibility"
"0","  title = paste(""<p><b>Node:</b>"", V(graph_3d)$name, ""<br><b>Frequency:</b>"", term_frequency[filtered_terms], ""</p>"")  # Custom hover popups"
"0",")"
"0",""
"0","# Sort nodes alphabetically by label"
"0","nodes <- nodes[order(nodes$label), ]"
"0",""
"0","edges <- data.frame("
"0","  from = as.character(ends(graph_3d, E(graph_3d))[, 1]),"
"0","  to = as.character(ends(graph_3d, E(graph_3d))[, 2]),"
"0","  value = E(graph_3d)$weight / max(E(graph_3d)$weight) * 1,  # Scale edge width for visibility"
"0","  label = round(E(graph_3d)$weight, 2)  # Add edge labels"
"0",")"
"0",""
"0","network_vis <- visNetwork(nodes, edges, width = ""100%"", height = ""90vh"") %>%"
"0","  visNodes("
"0","    shape = ""dot"","
"0","    scaling = list(min = 5, max = 30),"
"0","    font = list(size = 35),"
"0","    color = list("
"0","      background = topic_colors,"
"0","      border = ""black"","
"0","      highlight = ""red"""
"0","    ),"
"0","    title = nodes$title"
"0","  ) %>%"
"0","  visEdges("
"0","    width = ~value,"
"0","    color = list(color = 'gray', highlight = 'red'),"
"0","    smooth = list(enabled = TRUE, type = ""continuous"", roundness = 1)"
"0","  ) %>%"
"0","  visOptions("
"0","    highlightNearest = list(enabled = TRUE, hover = TRUE),"
"0","    nodesIdSelection = list(enabled = TRUE, useLabels = TRUE, main = ""Select by term""),  # Changed label for node selection"
"0","    selectedBy = list(variable = ""group"", sort = TRUE, main = ""Select by topic"")  # Changed label for group selection"
"0","  ) %>%"
"0","  visPhysics("
"0","    stabilization = FALSE,"
"0","    solver = ""barnesHut"","
"0","    barnesHut = list("
"0","      gravitationalConstant = -30000,  # Increase negative value for stronger repulsion"
"0","      springLength = 500,              # Increase spring length to spread nodes apart"
"0","      springConstant = 0.01            # Decrease spring constant for more flexible edges"
"0","    )"
"0","  ) %>%"
"0","  visInteraction("
"0","    dragNodes = TRUE,"
"0","    dragView = TRUE,"
"0","    zoomView = TRUE,"
"0","    navigationButtons = TRUE,  # Adds navigation buttons"
"0","    keyboard = TRUE"
"0","  ) %>%"
"0","  visLayout("
"0","    improvedLayout = TRUE"
"0","  )"
"0",""
"0","# Save the network graph to an HTML file with full width and height"
"0","network_graph_path <- file.path(output_directory, ""images and tables/new web visualizations/interactive_plot_3d_cooccurrence_network.html"")"
"0","visSave(network_vis, file = network_graph_path)"
"0",""
"0","# Custom title and legend creation in HTML"
"0","title_html <- '"
"0","<div style=""position: absolute; top: 40px; left: 50%; transform: translateX(-50%); font-size: 24px; font-weight: bold; font-family: Arial, sans-serif;"">"
"0","  Interactive Co-Occurrence Network of Top Terms"
"0","</div>"
"0","'"
"0",""
"0","legend_html <-'"
"0","<div style=""position: absolute; top: 40px; right: 40px; background-color: #f0f0f0; border: 1px solid #666; padding: 7px; text-padding: 7px; border-radius: 5px; font-family: Arial, sans-serif;"">"
"0","  <span style=""color: #94df5c;"">●</span> Topic 1"
"0","  <span style=""color: #ffff54;"">●</span> Topic 2"
"0","  <span style=""color: #eb8584;"">●</span> Topic 3<br>"
"0","  <span style=""color: #a787de;"">●</span> Topic 4"
"0","  <span style=""color: #dd82ee;"">●</span> Topic 5"
"0","  <span style=""color: #9fc0f7;"">●</span> Topic 6"
"0","</div>"
"0","'"
"0",""
"0","# Inject the custom title and legend into the HTML file"
"0","html_content <- readLines(network_graph_path)"
"0","html_content <- c(title_html, html_content, legend_html)"
"0","writeLines(html_content, network_graph_path)"
