"0","# Load necessary libraries"
"0","library(dplyr)"
"0","library(igraph)"
"0",""
"0","# Step 1: Create an edge list based on co-participation in threads"
"0","edges <- filtered_comments %>%"
"0","  filter(Thread.ID != """") %>%  # Ensure Thread.ID is not empty"
"0","  group_by(Thread.ID) %>%"
"0","  filter(n() > 1) %>%  # Only consider threads with more than one comment"
"0","  summarize(edgelist = list(combn(Author, 2, simplify = FALSE))) %>%  # Create pairwise combinations of authors"
"0","  unnest(edgelist) %>%"
"0","  unnest_wider(edgelist, names_sep = """") %>%"
"0","  rename(source = edgelist1, target = edgelist2) %>%"
"0","  filter(source != target) %>%  # Remove self-loops"
"0","  group_by(source, target) %>%"
"0","  summarize(weight = n(), .groups = 'drop')  # Count the number of co-participations as edge weight"
"0",""
"0","# Step 2: Create a graph object from the edge list"
"0","graph <- igraph::graph_from_data_frame(edges, directed = FALSE)"
"0",""
"0","# Step 3: Calculate the degree (number of connections) for each author"
"0","author_influence <- data.frame("
"0","  Author = igraph::V(graph)$name,"
"0","  Influence = igraph::degree(graph)"
"0",")"
"0",""
"0","# Step 4: Identify the top 15 most influential authors"
"0","top_influential_authors <- author_influence %>%"
"0","  arrange(desc(Influence)) %>%  # Sort authors by descending influence"
"0","  slice(1:15)  # Select the top 15 authors"
"0",""
"0","# Display the list of top 15 influential authors"
"0","print(top_influential_authors)"
