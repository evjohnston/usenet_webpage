"0","# Define positive and negative sentiment based on threshold"
"0","positive_threshold = 0"
"0","all_comments['SentimentPolarity'] = all_comments['SentimentScore'].apply(lambda x: 'Positive' if x > positive_threshold else 'Negative')"
"0",""
"0","plt.figure(figsize=(8, 6))"
"2","<string>:1: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
"
"1","<Figure size 800x600 with 0 Axes>
"
"0","sns.countplot(data=all_comments, x='SentimentPolarity', palette=['red', 'green'])"
"2","<string>:1: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

"
"1","<Axes: xlabel='SentimentPolarity', ylabel='count'>
"
"0","plt.title('Sentiment Polarity Distribution')"
"1","Text(0.5, 1.0, 'Sentiment Polarity Distribution')
"
"0","plt.xlabel('Sentiment Polarity')"
"1","Text(0.5, 0, 'Sentiment Polarity')
"
"0","plt.ylabel('Number of Comments')"
"1","Text(0, 0.5, 'Number of Comments')
"
"0","plt.tight_layout()"
"0","plt.savefig(os.path.join(output_directory, ""images and tables/old web visualizations/sentiment_polarity_distribution.png""))"
"0","plt.show()"
"0",""
