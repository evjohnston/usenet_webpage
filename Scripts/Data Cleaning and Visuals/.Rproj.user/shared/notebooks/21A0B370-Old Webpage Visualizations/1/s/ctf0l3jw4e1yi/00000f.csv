"0","# Libraries"
"0","library(dplyr)"
"0","library(tidyr)"
"0","library(visNetwork)"
"0","library(igraph)  # Needed for community detection"
"0","library(RColorBrewer)  # For generating pastel colors"
"0",""
"0","# Convert node names to zero-based indices"
"0","nodes <- nodes %>%"
"0","  mutate(id = 0:(n() - 1))  # Create a new 'id' column for nodes"
"0",""
"0","# Convert 'source' and 'target' in edges to indices using the 'name' to 'id' mapping"
"0","edges <- edges %>%"
"0","  mutate("
"0","    from = match(source, nodes$name) - 1,  # Zero-based index"
"0","    to = match(target, nodes$name) - 1     # Zero-based index"
"0","  )"
"0",""
"0","# Automatically assign colors to communities using RColorBrewer"
"0","num_communities <- length(unique(node_communities$community))"
"0","colors <- brewer.pal(min(num_communities, 9), ""Set1"")  # Use Set1 palette for distinct colors"
"0",""
"0","# If you have more than 9 communities and need more colors, you can create a larger palette"
"0","# by repeating or expanding the Set1 palette"
"0","if (num_communities > 9) {"
"0","  colors <- colorRampPalette(brewer.pal(9, ""Set1""))(num_communities)"
"0","}"
"0","# Merge nodes with their community data and assign colors automatically"
"0","nodes <- nodes %>%"
"0","  mutate(color = colors[community])"
"0",""
"0","# Create a network visualization with a force-directed layout"
"0","network_graph <- visNetwork(nodes, edges, width = ""100vw"", height = ""100vh"") %>%"
"0","  visNodes("
"0","    size = nodes$size * 5,"
"0","    font = list(size = 15),"
"0","    color = list("
"0","      border = ""black"","
"0","      highlight = ""red"""
"0","    ),"
"0","    title = nodes$title  # Use the title for hover popups"
"0","  ) %>%"
"0","  visEdges("
"0","    width = ~weight,"
"0","    color = list(color = 'gray', highlight = 'red'),"
"0","    smooth = list(enabled = TRUE, type = ""dynamic"", roundness = 0.5)  # Enable smooth dynamic edges with medium roundness"
"0","  ) %>%"
"0","  visOptions("
"0","    highlightNearest = list(enabled = TRUE, hover = TRUE),"
"0","    nodesIdSelection = list(enabled = TRUE)"
"0","  ) %>%"
"0","  visPhysics("
"0","    stabilization = TRUE,"
"0","    solver = ""barnesHut"","
"0","    barnesHut = list(gravitationalConstant = -8000, springLength = 100, springConstant = 0.01)"
"0","  ) %>%"
"0","  visInteraction("
"0","    dragNodes = TRUE,"
"0","    dragView = TRUE,"
"0","    zoomView = TRUE"
"0","  ) %>%"
"0","  visLayout("
"0","    improvedLayout = TRUE"
"0","  )"
"0",""
"0","# Display the network graph in the RStudio Viewer"
"0","network_graph"
